[sbc-to-outside]
; ARG1 = TENANTID, ARG2 = ROUTEID, ARG3 = EXTEN

exten => s,1,Verbose(2, route to pstn)
same => n,Set(CHANNEL(hangup_handler_push)=rip-omlside-branch,s,1)
same => n,Set(__MOTHERCHAN=${CHANNEL})
same => n,Set(__CALLTYPE=OUT)

; verifico si existen variables en la llamada
same => n,ExecIf($["${DB(SBC/TENANT/${ARG1}/TRUNK/${SBCTRUNKID}/CALLERID)}" != ""]?Set(CALLERID(all)=${DB(SBC/TENANT/${ARG1}/TRUNK/${SBCTRUNKID}/CALLERID)})
same => n,ExecIf($["${PJSIP_HEADER(read,OMLCAMPID)}" != ""]?Set(__OMLCAMP=${PJSIP_HEADER(read,OMLCAMPID)}):Set(__OMLCAMP=NULL))
same => n,ExecIf($["${PJSIP_HEADER(read,OMLRECFILENAME)}" != ""]?Set(__OMLCAMP=${PJSIP_HEADER(read,OMLRECFILENAME)}):Set(__RECORDFILE=NULL))
same => n,ExecIf($["${TRUNKRATE}" == ""]?Set(__TRUNKRATE=NULL))
same => n,ExecIf($["${CALLERID(name)}" == ""]?Set(CALLERID(name)=NULL))

same => n,Set(SBCOUTNUM=${ARG3})
same => n,Set(SBCROUTETRUNKS=${DB(SBC/TENANT/${ARG1}/OUTR/${ARG2}/TRUNKS)})
same => n,Set(SBCDIALOUTPREPEND=${DB(SBC/TENANT/${ARG1}/OUTR/${ARG2}/PREPEND)})
same => n,Set(SBCDIALOUTPREFIX=${DB(SBC/TENANT/${ARG1}/OUTR/${ARG2}/PREFIX)})
same => n,Set(SBCDIALOUTDIALTIME=${DB(SBC/TENANT/${ARG1}/OUTR/${ARG2}/DIALTIME)})
same => n,Set(SBCDIALOUTDIALOPTIONS=${DB(SBC/TENANT/${ARG1}/OUTR/${ARG2}/DIALOPTIONS)})

; inicio While trunks SET
same => n(outrWhile),Set(OUTRCOUNTER=1)
same => n,While($[${OUTRCOUNTER} <= ${SBCROUTETRUNKS}])
same => n,Set(SBCTRUNKID=${DB(SBC/TENANT/${ARG1}/OUTR/${ARG2}/TRUNK/${OUTRCOUNTER})})
same => n,Set(SBCTRUNKNAME=${DB(SBC/TENANT/${ARG1}/TRUNK/${SBCTRUNKID}/NAME)})
same => n,ExecIf($["${DB(SBC/TENANT/${ARG1}/TRUNK/${SBCTRUNKID}/CALLERID)}" != ""]?Set(CALLERID(all)=${DB(SBC/TENANT/${ARG1}/TRUNK/${SBCTRUNKID}/CALLERID)})
same => n,Set(__SBCYEARZERO=${EPOCH})
same => n,Progress()

same => n,Dial(PJSIP/${SBCDIALOUTPREPEND}${SBCOUTNUM:${SBCDIALOUTPREFIX}}@${SBCTRUNKNAME},${SBCDIALOUTDIALTIME},${SBCDIALOUTOPTIONS}cgU(sbc-bridge-calls,s,1))
same => n,Verbose(2, Dialstatus ${DIALSTATUS})

same => n(gotoIf),GotoIf($["${DIALSTATUS}" == "ANSWER"]?noFailoverAnswer)
same => n,GotoIf($["${DIALSTATUS}" == "BUSY"]?noFailoverBusy)
same => n,GotoIf($["${DIALSTATUS}" == "NOANSWER"]?noFailoverNoanswer)

same => n,Set(OUTRCOUNTER=${INC(OUTRCOUNTER)})
same => n,EndWhile(close)
; fin While trunks SET

same => n,Verbose(2, Dial failed DIALSTATUS = ${DIALSTATUS} - HANGUPCAUSE = ${HANGUPCAUSE})
same => n,AGI(sbc_agi.sh,${UNIQUEID},${TENANT},${CALLTYPE},${SBCTRUNKNAME},${DIALSTATUS},${CALLERID(name)},${SBCOUTNUM},NULL,${TRUNKRATE},${OMLCAMP},${RECORDFILE})
same => n,Congestion()
same => n,Hangup()

same => n(noFailoverBusy),Verbose(2, Dial failed DIALSTATUS = ${DIALSTATUS} - HANGUPCAUSE = ${HANGUPCAUSE})
same => n,Playtones(busy)
same => n,Busy(5)
same => n,AGI(sbc_agi.sh,${UNIQUEID},${TENANT},${CALLTYPE},${SBCTRUNKNAME},${DIALSTATUS},${CALLERID(name)},${SBCOUTNUM},NULL,${TRUNKRATE},${OMLCAMP},${RECORDFILE})
same => n,Hangup()

same => n(noFailoverNoanswer),Verbose(2, Dial failed DIALSTATUS = ${DIALSTATUS} - HANGUPCAUSE = ${HANGUPCAUSE})
same => n,AGI(sbc_agi.sh,${UNIQUEID},${TENANT},${CALLTYPE},${SBCTRUNKNAME},${DIALSTATUS},${CALLERID(name)},${SBCOUTNUM},NULL,${TRUNKRATE},${OMLCAMP},${RECORDFILE})
same => n,Hangup()

same => n(noFailoverAnswer),Verbose(2, Dial answer DIALSTATUS = ${DIALSTATUS} - HANGUPCAUSE = ${HANGUPCAUSE})
same => n,Hangup()

; bridge subrutine
[sbc-bridge-calls]
exten => s,1,Verbose(2, bridge call - answer call)
same => n,Set(__CALLWAITDURATION=$[${EPOCH} - ${SBCYEARZERO}])

same => n,Set(SHARED(CALLWAITDURATION,${MOTHERCHAN})=${CALLWAITDURATION})
same => n,Set(SHARED(ANSWERTIMESTAMP,${MOTHERCHAN})=${EPOCH})
same => n,Return()

; hangup handlers subrutine
[rip-outside-branch]
exten => s,1,Verbose(2, ${CONTEXT})
same => n,Set(CALLDURATION=$["${EPOCH}" - "${SHARED(ANSWERTIMESTAMP,${MOTHERCHANNEL})}"])
same => n,AGI(sbc_agi.sh,${UNIQUEID},${TENANT},${CALLTYPE},${SBCTRUNKNAME},${DIALSTATUS},${CALLERID(num)},${SBCOUTNUM},${CALLDURATION},${TRUNKRATE},${OMLCAMP},${RECORDFILE})
same => n,Hangup()

[rip-omlside-branch]
exten => s,1,Verbose(2, ${CONTEXT})
same => n,Set(CALLDURATION=$["${EPOCH}" - "${SHARED(ANSWERTIMESTAMP,${MOTHERCHANNEL})}"])
same => n,AGI(sbc_agi.sh,${UNIQUEID},${TENANT},${CALLTYPE},${SBCTRUNKNAME},${DIALSTATUS},${CALLERID(num)},${SBCOUTNUM},${CALLDURATION},${TRUNKRATE},${OMLCAMP},${RECORDFILE})
same => n,Hangup()

; subrutine for inbound calls ********IN******** subrutine for inbound calls
; subrutine for inbound calls ********IN******** subrutine for inbound calls
; subrutine for inbound calls ********IN******** subrutine for inbound calls
[sbc-sub-to-omls]
exten => s,1,Verbose(from outside to TENANT: ${TENANT})
same => n,Dial(PJSIP/${SBCDIDNUM}@${TENANT})
same => n,Hangup()
